[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Abhishek\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Abhishek\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.3 (Oracle Corporation Java 11.0.0.1)
[debug]       Load.loadUnit: plugins took 171.3287ms
[debug]       Load.loadUnit: defsScala took 0.4446ms
[debug] [Loading] Scanning directory C:\Users\Abhishek\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Abhishek\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 26.0832 ms
[debug]           Load.resolveProject(global-plugins) took 60.1583ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Abhishek\.sbt\1.0\plugins, plugins: List(<none>))) took 128.1586ms
[debug] [Loading] Done in C:\Users\Abhishek\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 157.6068ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3411ms
[debug]     Load.loadUnit(file:/C:/Users/Abhishek/.sbt/1.0/plugins/, ...) took 342.7399ms
[debug]   Load.apply: load took 712.6807ms
[debug]   Load.apply: resolveProjects took 8.4677ms
[debug]   Load.apply: finalTransforms took 118.6563ms
[debug]   Load.apply: config.delegates took 12.8581ms
[debug]   Load.apply: Def.make(settings)... took 747.0229ms
[debug]   Load.apply: structureIndex took 156.5378ms
[debug]   Load.apply: mkStreams took 2.0864ms
[info] loading global plugins from C:\Users\Abhishek\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 9825.2835ms
[debug]           Load.loadUnit: plugins took 52.6796ms
[debug]           Load.loadUnit: defsScala took 0.0062ms
[debug] [Loading] Scanning directory C:\Users\Abhishek\IdeaProjects\Task1\project
[debug]             Load.loadUnit: mkEval took 9.4842ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Abhishek\IdeaProjects\Task1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.7933 ms
[info] loading settings for project task1-build from idea.sbt ...
[debug]               Load.resolveProject(task1-build) took 9.058ms
[debug]             Load.loadTransitive: finalizeProject(Project(id task1-build, base: C:\Users\Abhishek\IdeaProjects\Task1\project, plugins: List(<none>))) took 12.9129ms
[debug] [Loading] Done in C:\Users\Abhishek\IdeaProjects\Task1\project, returning: (task1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 271.4986ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.945ms
[debug]         Load.loadUnit(file:/C:/Users/Abhishek/IdeaProjects/Task1/project/, ...) took 332.757ms
[debug]       Load.apply: load took 334.7143ms
[debug]       Load.apply: resolveProjects took 0.1947ms
[debug]       Load.apply: finalTransforms took 10.6207ms
[debug]       Load.apply: config.delegates took 0.5887ms
[debug]       Load.apply: Def.make(settings)... took 151.4543ms
[debug]       Load.apply: structureIndex took 90.7306ms
[debug]       Load.apply: mkStreams took 0.0033ms
[info] loading project definition from C:\Users\Abhishek\IdeaProjects\Task1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6978.2038ms
[debug]     Load.loadUnit: defsScala took 0.0047ms
[debug] [Loading] Scanning directory C:\Users\Abhishek\IdeaProjects\Task1
[debug]       Load.loadUnit: mkEval took 0.3648ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 276.1559 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 69.76ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Abhishek\IdeaProjects\Task1, plugins: List(<none>))) took 349.4089ms
[debug] [Loading] Done in C:\Users\Abhishek\IdeaProjects\Task1, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 6225.5951ms
[debug]     Load.loadUnit: cleanEvalClasses took 246.0918ms
[debug]   Load.loadUnit(file:/C:/Users/Abhishek/IdeaProjects/Task1/, ...) took 13450.867ms
[debug] Load.apply: load took 13453.2562ms
[debug] Load.apply: resolveProjects took 0.1378ms
[debug] Load.apply: finalTransforms took 52.1886ms
[debug] Load.apply: config.delegates took 0.5529ms
[debug] Load.apply: Def.make(settings)... took 275.2052ms
[debug] Load.apply: structureIndex took 56.6056ms
[debug] Load.apply: mkStreams took 0.0049ms
[info] set current project to GharWalaKaam (in build file:/C:/Users/Abhishek/IdeaProjects/Task1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49758 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49758, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to GharWalaKaam (in build file:/C:/Users/Abhishek/IdeaProjects/Task1/)
[debug] > Exec(idea-shell, None, None)
